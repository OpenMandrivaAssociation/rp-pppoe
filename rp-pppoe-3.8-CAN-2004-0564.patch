diff -up rp-pppoe-3.14/src/pppoe.c.1~ rp-pppoe-3.14/src/pppoe.c
--- rp-pppoe-3.14/src/pppoe.c.1~	2020-05-27 02:29:37.000000000 +0200
+++ rp-pppoe-3.14/src/pppoe.c	2020-05-29 15:45:57.305808007 +0200
@@ -67,6 +67,48 @@ int optFloodDiscovery    = 0;   /* Flood
 				   USED FOR STRESS-TESTING ONLY.  DO NOT
 				   USE THE -F OPTION AGAINST A REAL ISP */
 
+#ifdef AUTO_IFUP
+/* for interface activation, based on stripped down source source of ifconfig*/
+#include <linux/if.h>
+/*#include <sys/socket.h> */
+#include <sys/types.h>
+#include <sys/socket.h>
+#include "config.h"
+int skfd = -1;			/* generic raw socket desc.     */
+int sockets_open(int family)
+{
+  int sfd = -1;
+  sfd = socket(AF_INET, SOCK_DGRAM, 0);
+  return sfd;
+}
+/* Like strncpy but make sure the resulting string is always 0 terminated.
+ * Ripped from util.c (net-tools package) */  
+char *safe_strncpy(char *dst, const char *src, size_t size)
+{   
+    dst[size-1] = '\0';
+    return strncpy(dst,src,size-1);   
+}
+/* Set a certain interface flag. Ripped from ifconfig.c */
+static int set_flag(char *ifname, short flag)
+{
+    struct ifreq ifr;
+
+    safe_strncpy(ifr.ifr_name, ifname, IFNAMSIZ);
+    if (ioctl(skfd, SIOCGIFFLAGS, &ifr) < 0) {
+	fprintf(stderr, "%s: unknown interface: %s\n", 
+		ifname,	strerror(errno));
+	return (-1);
+    }
+    safe_strncpy(ifr.ifr_name, ifname, IFNAMSIZ);
+    ifr.ifr_flags |= flag;
+    if (ioctl(skfd, SIOCSIFFLAGS, &ifr) < 0) {
+	perror("SIOCSIFFLAGS");
+	return -1;
+    }
+    return (0);
+}
+#endif
+
 PPPoEConnection *Connection = NULL; /* Must be global -- used
 				       in signal handler */
 
@@ -510,6 +552,7 @@ main(int argc, char *argv[])
 	    break;
 
 	case 'p':
+	  if (getuid() == 0) {
 	    switchToRealID();
 	    pidfile = fopen(optarg, "w");
 	    if (pidfile) {
@@ -517,6 +560,7 @@ main(int argc, char *argv[])
 		fclose(pidfile);
 	    }
 	    switchToEffectiveID();
+          }
 	    break;
 	case 'S':
 	    SET_STRING(conn.serviceName, optarg);
@@ -549,6 +593,7 @@ main(int argc, char *argv[])
 	    break;
 #ifdef DEBUGGING_ENABLED
 	case 'D':
+	if (getuid() == 0) {
 	    switchToRealID();
 	    conn.debugFile = fopen(optarg, "w");
 	    switchToEffectiveID();
@@ -559,6 +604,7 @@ main(int argc, char *argv[])
 	    }
 	    fprintf(conn.debugFile, "rp-pppoe-%s\n", RP_VERSION);
 	    fflush(conn.debugFile);
+	}
 	    break;
 #endif
 	case 'T':
@@ -673,6 +719,15 @@ main(int argc, char *argv[])
 	exit(EXIT_SUCCESS);
     }
 
+#ifdef AUTO_IFUP
+    /* Create a channel to the NET kernel. */
+    if ((skfd = sockets_open(0)) < 0) {
+       perror("socket");
+       exit(1);
+    }
+
+    set_flag(conn.ifName, (IFF_UP | IFF_RUNNING));
+#endif
     /* Set signal handlers: send PADT on HUP; ignore TERM and INT */
     signal(SIGTERM, SIG_IGN);
     signal(SIGINT, SIG_IGN);
